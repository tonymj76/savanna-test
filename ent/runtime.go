// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/tonymj76/savannah/ent/repository"
	"github.com/tonymj76/savannah/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	repositoryFields := schema.Repository{}.Fields()
	_ = repositoryFields
	// repositoryDescName is the schema descriptor for name field.
	repositoryDescName := repositoryFields[0].Descriptor()
	// repository.NameValidator is a validator for the "name" field. It is called by the builders before save.
	repository.NameValidator = repositoryDescName.Validators[0].(func(string) error)
	// repositoryDescDescription is the schema descriptor for description field.
	repositoryDescDescription := repositoryFields[1].Descriptor()
	// repository.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	repository.DescriptionValidator = repositoryDescDescription.Validators[0].(func(string) error)
	// repositoryDescURL is the schema descriptor for URL field.
	repositoryDescURL := repositoryFields[2].Descriptor()
	// repository.URLValidator is a validator for the "URL" field. It is called by the builders before save.
	repository.URLValidator = repositoryDescURL.Validators[0].(func(string) error)
	// repositoryDescLanguage is the schema descriptor for language field.
	repositoryDescLanguage := repositoryFields[3].Descriptor()
	// repository.LanguageValidator is a validator for the "language" field. It is called by the builders before save.
	repository.LanguageValidator = repositoryDescLanguage.Validators[0].(func(string) error)
}
